<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserDao">
      <resultMap type="entity.User" id="UserResult">
          <id column="id" javaType="INTEGER" property="id" />
          <result column="login_name" javaType="String" property="login_name" />
          <result column="password" javaType="String" property="password" />
          <result column="username" javaType="String" property="username" />
          <result column="phone" javaType="String" property="phone" />
          <result column="last_login_time" javaType="java.sql.Timestamp" property="last_login_time" />
          <result column="ctime" javaType="java.sql.Timestamp" property="ctime" />
          <result column="utime" javaType="java.sql.Timestamp" property="utime" />
          <result column="role" javaType="String" property="role" />
      </resultMap>
    <!-- 目的：为dao接口方法提供sql语句配置 -->
    <select id="login" parameterType="String" resultMap="UserResult">
        <!-- 具体的sql -->
        SELECT
            *
        FROM
            user
        WHERE
            login_name = #{login_name} AND password = #{password}
    </select>
    <select id="all" parameterType="String" resultMap="UserResult">
        <!-- 具体的sql -->
        SELECT
            *
        FROM
            user
    </select>
    
    <update id="update" parameterType="entity.User"  
        flushCache="true">  
        update User  
        <set>  
            <if test="login_name != null and login_name != ''">  
                login_name = #{login_name,jdbcType=VARCHAR},  
            </if>  
            <if test="password != null and password != ''">  
                password = #{password,jdbcType=VARCHAR},  
            </if>  
            <if test="username != null and username != ''">  
                username = #{username,jdbcType=VARCHAR},  
            </if>  
            <if test="phone != null and phone != ''">  
                phone = #{phone,jdbcType=VARCHAR},  
            </if>
        </set>  
        where id = #{id,jdbcType=INTEGER}  
    </update>
    <insert id="insert" parameterType="entity.User">  
        INSERT INTO User (username,  
                          password,  
                          login_name,
                          phone,
                          role)
              VALUES   (#{username},  
                          #{password},  
                          #{login_name},  
                          #{phone},  
                          #{role})  
	</insert>    
	<insert id="delete" parameterType="entity.User">  
        DELETE FROM User where id = #{id}  
	</insert>
</mapper>