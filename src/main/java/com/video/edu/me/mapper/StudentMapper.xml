<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.video.edu.me.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.video.edu.me.entity.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="study_id" jdbcType="VARCHAR" property="studyId" />
    <result column="study_name" jdbcType="VARCHAR" property="studyName" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="study_intro" jdbcType="VARCHAR" property="studyIntro" />
    <result column="teacher_remark" jdbcType="VARCHAR" property="teacherRemark" />
    <result column="parent_words" jdbcType="VARCHAR" property="parentWords" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="food" jdbcType="VARCHAR" property="food" />
    <result column="interest" jdbcType="VARCHAR" property="interest" />
    <result column="disagree" jdbcType="VARCHAR" property="disagree" />
    <result column="ideal" jdbcType="VARCHAR" property="ideal" />
    <result column="img_urls" jdbcType="VARCHAR" property="imgUrls" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, group_id, group_name, study_id, study_name, status, ctime, utime, sex, 
    study_intro, teacher_remark, parent_words, phone, birthday, food, interest, disagree, 
    ideal, img_urls
  </sql>
  <select id="selectByExample" parameterType="com.video.edu.me.entity.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.video.edu.me.entity.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.video.edu.me.entity.Student">
    insert into student (id, user_id, group_id, 
      group_name, study_id, study_name, 
      status, ctime, utime, 
      sex, study_intro, teacher_remark, 
      parent_words, phone, birthday, 
      food, interest, disagree, 
      ideal, img_urls)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, 
      #{groupName,jdbcType=VARCHAR}, #{studyId,jdbcType=VARCHAR}, #{studyName,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{ctime,jdbcType=TIMESTAMP}, #{utime,jdbcType=TIMESTAMP}, 
      #{sex,jdbcType=TINYINT}, #{studyIntro,jdbcType=VARCHAR}, #{teacherRemark,jdbcType=VARCHAR}, 
      #{parentWords,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, 
      #{food,jdbcType=VARCHAR}, #{interest,jdbcType=VARCHAR}, #{disagree,jdbcType=VARCHAR}, 
      #{ideal,jdbcType=VARCHAR}, #{imgUrls,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.video.edu.me.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="studyId != null">
        study_id,
      </if>
      <if test="studyName != null">
        study_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="utime != null">
        utime,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="studyIntro != null">
        study_intro,
      </if>
      <if test="teacherRemark != null">
        teacher_remark,
      </if>
      <if test="parentWords != null">
        parent_words,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="food != null">
        food,
      </if>
      <if test="interest != null">
        interest,
      </if>
      <if test="disagree != null">
        disagree,
      </if>
      <if test="ideal != null">
        ideal,
      </if>
      <if test="imgUrls != null">
        img_urls,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="studyId != null">
        #{studyId,jdbcType=VARCHAR},
      </if>
      <if test="studyName != null">
        #{studyName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="studyIntro != null">
        #{studyIntro,jdbcType=VARCHAR},
      </if>
      <if test="teacherRemark != null">
        #{teacherRemark,jdbcType=VARCHAR},
      </if>
      <if test="parentWords != null">
        #{parentWords,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="food != null">
        #{food,jdbcType=VARCHAR},
      </if>
      <if test="interest != null">
        #{interest,jdbcType=VARCHAR},
      </if>
      <if test="disagree != null">
        #{disagree,jdbcType=VARCHAR},
      </if>
      <if test="ideal != null">
        #{ideal,jdbcType=VARCHAR},
      </if>
      <if test="imgUrls != null">
        #{imgUrls,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.video.edu.me.entity.StudentExample" resultType="java.lang.Integer">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.groupName != null">
        group_name = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.studyId != null">
        study_id = #{record.studyId,jdbcType=VARCHAR},
      </if>
      <if test="record.studyName != null">
        study_name = #{record.studyName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.utime != null">
        utime = #{record.utime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.studyIntro != null">
        study_intro = #{record.studyIntro,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherRemark != null">
        teacher_remark = #{record.teacherRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.parentWords != null">
        parent_words = #{record.parentWords,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.food != null">
        food = #{record.food,jdbcType=VARCHAR},
      </if>
      <if test="record.interest != null">
        interest = #{record.interest,jdbcType=VARCHAR},
      </if>
      <if test="record.disagree != null">
        disagree = #{record.disagree,jdbcType=VARCHAR},
      </if>
      <if test="record.ideal != null">
        ideal = #{record.ideal,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrls != null">
        img_urls = #{record.imgUrls,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      study_id = #{record.studyId,jdbcType=VARCHAR},
      study_name = #{record.studyName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      utime = #{record.utime,jdbcType=TIMESTAMP},
      sex = #{record.sex,jdbcType=TINYINT},
      study_intro = #{record.studyIntro,jdbcType=VARCHAR},
      teacher_remark = #{record.teacherRemark,jdbcType=VARCHAR},
      parent_words = #{record.parentWords,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      food = #{record.food,jdbcType=VARCHAR},
      interest = #{record.interest,jdbcType=VARCHAR},
      disagree = #{record.disagree,jdbcType=VARCHAR},
      ideal = #{record.ideal,jdbcType=VARCHAR},
      img_urls = #{record.imgUrls,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.video.edu.me.entity.Student">
    update student
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="studyId != null">
        study_id = #{studyId,jdbcType=VARCHAR},
      </if>
      <if test="studyName != null">
        study_name = #{studyName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="studyIntro != null">
        study_intro = #{studyIntro,jdbcType=VARCHAR},
      </if>
      <if test="teacherRemark != null">
        teacher_remark = #{teacherRemark,jdbcType=VARCHAR},
      </if>
      <if test="parentWords != null">
        parent_words = #{parentWords,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="food != null">
        food = #{food,jdbcType=VARCHAR},
      </if>
      <if test="interest != null">
        interest = #{interest,jdbcType=VARCHAR},
      </if>
      <if test="disagree != null">
        disagree = #{disagree,jdbcType=VARCHAR},
      </if>
      <if test="ideal != null">
        ideal = #{ideal,jdbcType=VARCHAR},
      </if>
      <if test="imgUrls != null">
        img_urls = #{imgUrls,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.video.edu.me.entity.Student">
    update student
    set user_id = #{userId,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER},
      group_name = #{groupName,jdbcType=VARCHAR},
      study_id = #{studyId,jdbcType=VARCHAR},
      study_name = #{studyName,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=TINYINT},
      study_intro = #{studyIntro,jdbcType=VARCHAR},
      teacher_remark = #{teacherRemark,jdbcType=VARCHAR},
      parent_words = #{parentWords,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      food = #{food,jdbcType=VARCHAR},
      interest = #{interest,jdbcType=VARCHAR},
      disagree = #{disagree,jdbcType=VARCHAR},
      ideal = #{ideal,jdbcType=VARCHAR},
      img_urls = #{imgUrls,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>